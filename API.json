{
  "categories": [
    {
      "category": "Authentication & Authorization",
      "testCases": [
        {
          "name": "Test Bypass Authentication with Missing Token",
          "steps": [
            "Send request to protected endpoint without token",
            "Verify that the response is 401 Unauthorized"
          ]
        },
        {
          "name": "Test Bypass Authentication with Invalid Token",
          "steps": [
            "Send request with malformed or expired token",
            "Check if API still allows access"
          ]
        },
        {
          "name": "Test IDOR (Insecure Direct Object Reference)",
          "steps": [
            "Login as user A",
            "Try accessing user B's resource via /api/users/{id}",
            "Check if access is permitted"
          ]
        }
      ]
    },
    {
      "category": "Input Validation & Injection",
      "testCases": [
        {
          "name": "Test SQL Injection on Login Endpoint",
          "steps": [
            "Send POST to /login with payload ' OR 1=1 --",
            "Observe if authentication bypasses"
          ]
        },
        {
          "name": "Test Command Injection via API Input",
          "steps": [
            "Send malicious payload to vulnerable parameter (e.g., ; ls -la)",
            "Check if command is executed on the server"
          ]
        }
      ]
    },
    {
      "category": "Rate Limiting & Brute Force",
      "testCases": [
        {
          "name": "Test Login Brute Force Protection",
          "steps": [
            "Send multiple failed login attempts with different passwords",
            "Check for rate limiting or CAPTCHA enforcement"
          ]
        },
        {
          "name": "Test Rate Limit on Sensitive Endpoints",
          "steps": [
            "Send multiple requests to /reset-password endpoint",
            "Check if rate limits are enforced (429 or blocking)"
          ]
        }
      ]
    },
    {
      "category": "Information Disclosure",
      "testCases": [
        {
          "name": "Check for Stack Trace in Error Messages",
          "steps": [
            "Send malformed request to API",
            "Verify response does not include stack trace or internal details"
          ]
        },
        {
          "name": "Check for Sensitive Data in Response",
          "steps": [
            "Access user object",
            "Ensure password hashes, tokens, or PII are not returned"
          ]
        }
      ]
    },
    {
      "category": "HTTPS & Security Headers",
      "testCases": [
        {
          "name": "Test API Availability over HTTP",
          "steps": [
            "Try accessing API using http:// instead of https://",
            "Verify redirection or blocking"
          ]
        },
        {
          "name": "Check Security Headers in Response",
          "steps": [
            "Send request to any endpoint",
            "Check headers: Content-Security-Policy, X-Frame-Options, etc."
          ]
        }
      ]
    }
  ]
}
